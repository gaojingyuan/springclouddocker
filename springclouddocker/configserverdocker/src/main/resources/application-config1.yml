eurekaService:
  service1: eurekaService1
  service2: eurekaService2
  service3: eurekaService3
spring:
  application:
    name: configserverdocker
  cloud:
    config:
      server:
        git:
          uri: https://github.com/gaojingyuan/springcloud
          searchPaths: config
          username:
          password:
      label: master
  rabbitmq:
    host: rabbit1
    port: 5672
    username: myuser
    password: mypass
server:
  port: 8866
eureka:
  instance:
# 通过docker stack deploy -c docker-compose.yml base启动时 eurekaserver上注册的是localhost configclient通过localhost访问不到configserver
# 注:使用docker-compose up时没有上述问题 localhost位置是container的ID
# 加入这个配置 虽然eurekaserver仍然显示localhost 但是configclient访问时能访问到当前config主机的ip
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://${eurekaService.service1}:8888/eureka/,http://${eurekaService.service2}:8887/eureka/,http://${eurekaService.service3}:8886/eureka/
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Security-2.0
management:
  endpoints:
    web:
      exposure:
        include: '*'